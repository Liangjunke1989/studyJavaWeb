<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
    namespace:命名空间
-->
<mapper namespace="com.nboweb.mapper.BrandMapper">

    <!--
        数据库的字段名称和实体类的属性名称不一样，则不能自动封装数据。
            * 起别名：给数据库的查询字段起别名,让别名和实体类的属性名一样。
                （缺点：每次查询都要定义别名。sql片段可以解决这个问题。不灵活。）
            * resultMap:常用解决方案。
                1、定义<resultMap标签>
                2、在<select>标签中，使用resultMap属性替换resultType属性。
    -->

    <!--
        resultMap:
            id:唯一标识
            type：映射的类型，实体类（支持别名）
    -->
    <resultMap id="brandResultMap" type="com.nboweb.pojo.Brand">
        <!--
            id: 完成主键字段的映射
                column: 表的列名
                property: 实体类的属性名
            result：一般主键的映射
        -->
        <result column="brand_name" property="brandName"/>
        <result column="company_name" property="companyName"/>
    </resultMap>
    <!--查询：查询所有-->
    <select id="selectAll" resultMap="brandResultMap">
        select *
        from tb_brand;
    </select>
    <!--查询：查询详情-->
    <!--
         参数占位符：
             1、#{}:会将其替换为 ？。为了防止SQL注入
             2、${}:拼SQL。 会存在SQL注入问题
             3、使用时机：
                     在参数传递的时候:用#{}
                     动态操作数据库的时候,表名和列名不固定的情况下 ${tableName}
         参数类型：
             指定参数类型
             parameterType可以省略
         特殊字符的处理： "<" ">"
            1、转义字符:
                 转义字符较少的情况下使用：如&lt
            2、CDATA区：
                 <![CDATA[
                     >
                 ]]>
    -->
    <select id="selectById" parameterType="int" resultMap="brandResultMap">
        select *
        from tb_brand
        where id
        <![CDATA[
            =
        ]]>
        #{id};
    </select>


    <!--查询： 条件查询：多条件查询-->
    <!--    <select id="selectByCondition" resultMap="brandResultMap">-->
    <!--        select *-->
    <!--        from tb_brand-->
    <!--        where status=#{status}-->
    <!--          and company_name like #{companyName}-->
    <!--          and brand_name like #{brandName}-->
    <!--    </select>-->


    <!--查询： 条件查询：多条件动态查询-->
    <!--
        动态条件查询：
            if：条件判断
                test：逻辑表达式
            问题：
                多条件的 "and" 连接的使用？
                1、恒等式的加入
                2、where标签

    -->
    <select id="selectByCondition" resultMap="brandResultMap">
        select *
        from tb_brand
        /*where 1=1*/
        <where>
            <if test="status!=null">
                and status=#{status}
            </if>
            <if test="companyName!=null and companyName!=''">
                and company_name like #{companyName}
            </if>
            <if test="brandName!=null and brandName!=''">
                and brand_name like #{brandName}
            </if>
        </where>
    </select>
    <!--
        查询：单条件动态查询
    -->
    <select id="selectByConditionSingle" resultMap="brandResultMap">
        select *
        from tb_brand
        <where>
            <choose>
                <when test="status!=null">/*相当于case*/
                    status=#{status}
                </when>
                <when test="companyName!=null and companyName!=''">/*相当于case*/
                    company_name like #{companyName}
                </when>
                <when test="brandName!=null and brandName!=''">/*相当于case*/
                    brand_name like #{brandName}
                </when>
            </choose>
        </where>
    </select>

</mapper>